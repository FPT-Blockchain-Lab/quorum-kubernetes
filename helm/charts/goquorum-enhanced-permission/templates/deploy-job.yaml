---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "goquorum-enhanced-permission.name" . }}-sa
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "goquorum-enhanced-permission.name" . }}-role
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "goquorum-enhanced-permission.name" . }}
    helm.sh/chart: {{ include "goquorum-enhanced-permission.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["create", "get", "list", "update", "delete" ]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "goquorum-enhanced-permission.name" . }}-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "goquorum-enhanced-permission.name" . }}-role
subjects:
  - kind: ServiceAccount
    name: {{ include "goquorum-enhanced-permission.name" . }}-sa
    namespace: {{ .Release.Namespace }}


---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "goquorum-enhanced-permission.name" . }}-init
  labels:
    app: {{ template "goquorum-enhanced-permission.name" . }}
    chart: {{ template "goquorum-enhanced-permission.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    app.kubernetes.io/name: {{ include "goquorum-enhanced-permission.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "goquorum-enhanced-permission.chart" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "goquorum-enhanced-permission.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "goquorum-enhanced-permission.name" . }}-sa
      restartPolicy: "Never"
      containers:
        - name: generate-enhanced-permission
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          securityContext:
            runAsUser: 0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: RPC_URL
            value: "{{ .Values.deployer.rpcUrl }}"
          - name: NETWORK_ID
            valueFrom:
              configMapKeyRef:
                name: goquorum-networkid
                key: networkId
          - name: ACCOUNT_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.deployer.nodeSecretKeyName }}"
                key: accountPrivate.key
          command:
            - /bin/bash
            - -c
          args:
            - |
              sleep 10
              VERSION=1.0.3; curl -OL https://github.com/FPT-Blockchain-Lab/quorum-enhanced-permission-deployer/archive/refs/tags/$VERSION.tar.gz && tar -xvf $VERSION.tar.gz

              export FOLDER_PATH=$(pwd)/quorum-enhanced-permission-deployer-$VERSION
              cd $FOLDER_PATH && npm install
              node $FOLDER_PATH/deployer.js

              function safeWriteEnhancedPermissionedConfigmap {
                kubectl get configmap --namespace {{ .Release.Namespace }} goquorum-enhanced-permission-config
                if [ $? -ne 0 ]; then
                  kubectl create configmap --namespace {{ .Release.Namespace }} goquorum-enhanced-permission-config --from-file=permission-config.json=$FOLDER_PATH/permission-config.json
                fi
              }
              
              safeWriteEnhancedPermissionedConfigmap

              echo "Smart Contract permissions config"
              cat $FOLDER_PATH/permission-config.json
