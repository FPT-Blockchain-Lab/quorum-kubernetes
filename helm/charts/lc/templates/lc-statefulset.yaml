---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "subgraph.fullname" . }}-sa
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "subgraph.fullname" . }}-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "subgraph.fullname" . }}-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "subgraph.fullname" . }}-role
subjects:
- kind: ServiceAccount
  name: {{ include "subgraph.fullname" . }}-sa
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "lc.fullname" . }}
  labels:
    app: {{ template "lc.fullname" . }}
    chart: {{ template "lc.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    component: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "lc.fullname" . }}
    helm.sh/chart: {{ include "lc.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: {{ template "lc.fullname" . }}
      release: {{ .Release.Name }}
      component: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "lc.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "lc.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: "1Gb"
  template:
    metadata:
      labels:
        app: {{ template "lc.fullname" . }}
        release: {{ .Release.Name }}
        component: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "lc.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "subgraph.fullname" . }}-sa
      containers:
      - name: {{ .Release.Name }}-ipfs
        image: {{ .Values.image.ipfs.repository }}:{{ .Values.image.ipfs.tag }}
        imagePullPolicy: {{ .Values.image.ipfs.pullPolicy }}
        resources:
          requests:
            cpu: 0.1
            memory: "1G"
          limits:
            cpu: 1
            memory: "2G"
        volumeMounts:
          - name: ipfs
            mountPath: /data/ipfs
        ports:
          - name: default
            containerPort: 5001
      - name: {{ .Release.Name }}-subgraph
        image: {{ .Values.image.subgraph.repository }}:{{ .Values.image.subgraph.tag }}
        imagePullPolicy: {{ .Values.image.subgraph.pullPolicy }}
        resources:
          requests:
            cpu: 0.1
            memory: "1G"
          limits:
            cpu: 1
            memory: "2G"
        env:
          - name: POSTGRES_URL
            value: {{ .Values.subgraph.postgrest_connection_url | quote }}
          - name: IPFS
            value: http://{{ .Values.subgraph.ipfs_endpoint }}:5001
          - name: ETHEREUM_RPC
            value: http://{{ .Values.subgraph.ethereum_jsonrpc_endpoint }}:8545
        ports:
          - name: http-graphql
            containerPort: 8000
            protocol: TCP
          - name: ws-graphql
            containerPort: 8001
            protocol: TCP
          - name: json-rpc-admin
            containerPort: 8020
            protocol: TCP
          - name: indexer
            containerPort: 8030
            protocol: TCP
          - name: metrics
            containerPort: 8040
            protocol: TCP
      # - name: {{ .Release.Name }}-lc
      #   image: {{ .Values.image.lc.repository }}:{{ .Values.image.lc.tag }}
      #   imagePullPolicy: {{ .Values.image.lc.pullPolicy }}
      #   resources:
      #     requests:
      #       cpu: 0.1
      #       memory: "1G"
      #     limits:
      #       cpu: 1
      #       memory: "2G"
      #   ports:
      #     - name: server
      #       containerPort: 3000
      #       protocol: TCP